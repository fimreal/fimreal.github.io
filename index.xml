<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>闲隅</title><link>https://blog.epurs.com/</link><description>Recent content on 闲隅</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 03 Nov 2021 15:46:49 +0800</lastBuildDate><atom:link href="https://blog.epurs.com/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Kubernetes-Replicator 在不同命名空间同步 secret</title><link>https://blog.epurs.com/post/kubernettes-replicator/</link><pubDate>Wed, 03 Nov 2021 15:46:49 +0800</pubDate><guid>https://blog.epurs.com/post/kubernettes-replicator/</guid><description>&lt;p>kubernetes 最佳实践会教我们创建很多命名空间（namespace）来做服务隔离，但同时服务对应的 configmap 和 secret 也会因为命名空间被分割开。当我们需要对多个命名空间实则相同的对象，执行更新的配置时，同步配置着实有些麻烦。本文通过引入 kubernetes-replicator 来解决这个麻烦的问题。&lt;/p></description></item><item><title>FCOS rpm-ostree 使用避坑笔记</title><link>https://blog.epurs.com/post/rpm-oostree-stuck/</link><pubDate>Thu, 21 Oct 2021 11:47:46 +0800</pubDate><guid>https://blog.epurs.com/post/rpm-oostree-stuck/</guid><description>&lt;p>FCOS rpm-ostree 使用避坑笔记，应该会持续更新。&lt;/p></description></item><item><title>改进 lego 自动更新证书到 secret</title><link>https://blog.epurs.com/post/update-cert-to-secret/</link><pubDate>Mon, 18 Oct 2021 18:27:26 +0800</pubDate><guid>https://blog.epurs.com/post/update-cert-to-secret/</guid><description>&lt;p>配置自动更新域名证书，同时更新到指定的 K8s 的 secret 中。&lt;/p></description></item><item><title>通过创建 svc，在 k8s 内优雅的访问集群外部服务</title><link>https://blog.epurs.com/post/external-service-in-k8s/</link><pubDate>Fri, 15 Oct 2021 09:49:26 +0800</pubDate><guid>https://blog.epurs.com/post/external-service-in-k8s/</guid><description/></item><item><title>Docker 创建 NFS Volume</title><link>https://blog.epurs.com/post/docker-nfs-volume/</link><pubDate>Fri, 15 Oct 2021 09:22:52 +0800</pubDate><guid>https://blog.epurs.com/post/docker-nfs-volume/</guid><description>&lt;p>Docker 如何使用 NFS Volume，多个容器使用 NFS Volume 的便捷用法。&lt;/p></description></item><item><title>Nginx Tcp 代理添加 IP 限制</title><link>https://blog.epurs.com/post/nginx-tcp-proxy/</link><pubDate>Thu, 14 Oct 2021 18:20:49 +0800</pubDate><guid>https://blog.epurs.com/post/nginx-tcp-proxy/</guid><description>&lt;p>用容器启动一个便捷快速可管控的 TCP 代理。&lt;/p></description></item><item><title>Traefik2 Ingress 使用 Basicauth</title><link>https://blog.epurs.com/post/traefik2-ingress-useing-basicauth/</link><pubDate>Thu, 14 Oct 2021 18:15:28 +0800</pubDate><guid>https://blog.epurs.com/post/traefik2-ingress-useing-basicauth/</guid><description>&lt;p>网上搜不到资料，反复尝试才确认 Traefik 2.x 版本做 ingress 配置 basic authorization 的正确方式。&lt;/p></description></item><item><title>从 CoreOS 迁移到 Fedora CoreOS 之 用 fcct 初始化 fcos</title><link>https://blog.epurs.com/post/fcos-fcct/</link><pubDate>Fri, 10 Sep 2021 09:49:22 +0800</pubDate><guid>https://blog.epurs.com/post/fcos-fcct/</guid><description>&lt;p>安装 Fedora CoreOS 系统需要用到 ignition 配置，初看起来很复杂，其实做起来很简单。简单记录创建 fcc 配置文件，并在 vmware 安装 fcos ，转化 qcow2 镜像的过程。&lt;/p></description></item><item><title>从 CoreOS 迁移到 Fedora CoreOS 之 用 Podman 代替 Docker</title><link>https://blog.epurs.com/post/docker-to-podman/</link><pubDate>Fri, 10 Sep 2021 09:46:32 +0800</pubDate><guid>https://blog.epurs.com/post/docker-to-podman/</guid><description>&lt;p>之前个人服务器一直在使用 CoreOS 操作系统，但是由于 CoreOS 系统停更太久了，Docker 版本已经跟不上时代步伐，时不时就出现新镜像没法兼容的情况，遂决定迁移至 Fedora CoreOS，同时尝试使用 Podman 替换掉逐步被业界冷落的 Docker。&lt;/p></description></item><item><title>帮助已经运行的容器暴露端口</title><link>https://blog.epurs.com/post/exposing-a-port-on-a-live-container/</link><pubDate>Fri, 30 Apr 2021 17:35:23 +0800</pubDate><guid>https://blog.epurs.com/post/exposing-a-port-on-a-live-container/</guid><description>&lt;p>使用Docker时经常会碰到某些容器需要额外打开端口调试的情况，而 docker-proxy 不支持用户在命令行创建新的端口映射，我们需要额外一些小技巧来实现端口转发。&lt;/p></description></item><item><title>Kubernetes 上部署 rabbitmq statefulset集群</title><link>https://blog.epurs.com/post/deploy_rabbitmq_on_kubernetes/</link><pubDate>Fri, 15 May 2020 13:43:30 +0800</pubDate><guid>https://blog.epurs.com/post/deploy_rabbitmq_on_kubernetes/</guid><description>&lt;p>使用 RabbitMQ 3.7.0 开始内置的 &lt;code>rabbitmq_peer_discovery_k8s&lt;/code> 插件来实现各实例自动发现，最终用 StatefulSet 部署集群。&lt;/p></description></item><item><title>Kubernetes 上部署维护 ProxySQL StatefulSet 集群笔记</title><link>https://blog.epurs.com/post/deploy_proxysql_on_kubernetes/</link><pubDate>Thu, 14 May 2020 16:27:36 +0800</pubDate><guid>https://blog.epurs.com/post/deploy_proxysql_on_kubernetes/</guid><description>&lt;p>一些在 k8s 上部署 Proxysql 集群时的的配置记录，
一些在使用 ProxySQL 时遇到的问题，及解决办法。&lt;/p></description></item><item><title>MySQL备份还原笔记</title><link>https://blog.epurs.com/post/mysql_dump_and_recovery/</link><pubDate>Thu, 14 May 2020 03:30:00 +0000</pubDate><guid>https://blog.epurs.com/post/mysql_dump_and_recovery/</guid><description>&lt;p>MySQL 备份时常用到的命令，脚本笔记。&lt;/p></description></item><item><title>记一次解决 Linux 登陆慢的问题</title><link>https://blog.epurs.com/post/solve_a_strange_problem_caused_slow_login/</link><pubDate>Sat, 28 Mar 2020 14:00:14 +0800</pubDate><guid>https://blog.epurs.com/post/solve_a_strange_problem_caused_slow_login/</guid><description>&lt;p>Linux 运行一段时间，登陆变得非常缓慢，好不容易进入 shell，连 reboot 命令都会失败，最终原因竟然是&amp;hellip;&lt;/p></description></item><item><title>Docker 中 java 应用内存配置问题</title><link>https://blog.epurs.com/post/java_in_docker/</link><pubDate>Sat, 12 Oct 2019 18:17:20 +0800</pubDate><guid>https://blog.epurs.com/post/java_in_docker/</guid><description>&lt;p>使用 Dockerhub &lt;code>java:8&lt;/code> 为基础镜像创建 Springboot APP 时，会遇到很多内存配置的问题。首先容器内存使用 cgroup 技术隔离，当对容器作出限制时，低版本 java 找不到正确的内存配置，
而 java8 默认会取总内存 1/4 作为堆内存配置来启动应用，可能会导致 OOM 频繁发生，并且不便于节约服务器资源。&lt;/p></description></item><item><title>在 Kubernetes 上挂载使用腾讯云对象存储 COS 的一种配置方法</title><link>https://blog.epurs.com/post/cosfs-on-kubernetes/</link><pubDate>Sun, 29 Sep 2019 10:05:00 +0000</pubDate><guid>https://blog.epurs.com/post/cosfs-on-kubernetes/</guid><description>&lt;p>目前 Kubernetes 自身网络卷挂载尚不支持共有云提供的对象存储产品，但是可以通过 Kubernetes 自身所拥有的功能利用一些小技巧将对象存储挂载到集群内实现共享读写的目的。&lt;/p>
&lt;p>通过搜索，我们可以知道阿里云给自己的 Kubernetes 平台做了挂载 OSS 的插件，最佳实践可以参考&lt;a href="https://yq.aliyun.com/articles/640212">K8S有状态服务-OSS存储使用最佳实践&lt;/a>，理论上使用阿里云 OSS 产品都可以自行&lt;a href="https://help.aliyun.com/document_detail/86785.html?spm=a2c4g.11186623.2.10.46bb7db2T54nWw#concept-wrq-dvs-vdb">安装插件&lt;/a>来使用，使用阿里云产品的可以优先参考文档说明，或者提交工单寻求帮助。文中所举例使用的是腾讯云的 COS，用法则是参考 AWS 博客写的 k8s 挂载 S3 说明 &lt;a href="https://amazonaws-china.com/cn/blogs/china/use-u3fs-as-shared-storage-to-kubernetes-pod/">Kubernetes pods used shared S3 storage&lt;/a> 。&lt;/p></description></item><item><title>CoreOS 使用 systemd 定时任务启动容器更新 ssl 证书</title><link>https://blog.epurs.com/post/update-ssl-certificates-with-systemd-timer-and-docker/</link><pubDate>Mon, 23 Sep 2019 07:23:00 +0000</pubDate><guid>https://blog.epurs.com/post/update-ssl-certificates-with-systemd-timer-and-docker/</guid><description>&lt;p>如果你跟我一样“喜欢”并使用着 CoreOS 这个专为运行容器设计的系统，对它极精简和苛刻的安全策略着迷的同时，又烦闹于没有 crond 定时服务来管理一些小计划任务，可以参考这篇文章写的一个实例。
使用 systemd 自带的 timer 即定时器功能来替代 crond 管理启动定时任务。
文中给出我自己服务器上使用 Docker 定时更新 Let&amp;rsquo;s Encrypt 证书的 unit 配置文件，及一些简单的管理查看办法供参考。&lt;/p></description></item><item><title>记一次 dash 导致脚本执行失败的问题</title><link>https://blog.epurs.com/post/a-strange-problem-caused-by-dash/</link><pubDate>Mon, 19 Aug 2019 06:33:00 +0000</pubDate><guid>https://blog.epurs.com/post/a-strange-problem-caused-by-dash/</guid><description>&lt;p>众所周知，Debian 系系统默认的 shell 是 &lt;code>dash&lt;/code>（&lt;a href="https://en.wikipedia.org/wiki/Almquist_shell">Debian Almquist shell&lt;/a>），日常使用也很少发现有不同于 &lt;code>bash&lt;/code> ，完全不能用的地方。&lt;/p>
&lt;p>最近，我在重写开发搞的 kettle 定时任务时发现了奇怪的问题，日志正常打印，看起来所有 job 都正确执行了，但是数据库中数据却没有按预期更新。反复折腾排除后，发现是脚本第一行声明执行命令不同的缘故，也就是 ubuntu 环境下使用 &lt;code>sh&lt;/code> 执行会导致数据库数据没有正确更新。&lt;/p></description></item><item><title>一个查找 Docker 镜像包含 tag 的脚本</title><link>https://blog.epurs.com/post/a-shell-script-for-searhing-docker-image-tags/</link><pubDate>Tue, 11 Jun 2019 06:40:50 +0000</pubDate><guid>https://blog.epurs.com/post/a-shell-script-for-searhing-docker-image-tags/</guid><description>&lt;p>用 cURL 简单写一个查询 Docker 镜像的脚本，可以非常方便的查看搜索可以选 tag 。&lt;/p></description></item><item><title>使用 google_authenticator 生成动态密码加固 ssh 登陆</title><link>https://blog.epurs.com/post/google-authenticator/</link><pubDate>Thu, 06 Jun 2019 02:40:00 +0000</pubDate><guid>https://blog.epurs.com/post/google-authenticator/</guid><description>&lt;p>利用 google 动态口令生成密码给 sshd 做两步验证实现安全加密。
又或者甩掉固定的密码，来使用手机 app 生成的动态密码登陆服务器。
这只是一些 &lt;code>pam&lt;/code> 配置实现的小技巧。&lt;/p></description></item><item><title>nginx location 规则使用正则时改写 request_uri 报错</title><link>https://blog.epurs.com/post/nginx-proxy-cache-regular-configuration/</link><pubDate>Thu, 09 May 2019 06:51:22 +0000</pubDate><guid>https://blog.epurs.com/post/nginx-proxy-cache-regular-configuration/</guid><description>&lt;p>今天在配置 nginx 缓存时，遇到一个棘手的问题，开发反馈需要实现缓存特定路径下的数据，并且要能手动清除缓存。缓存配置和清除的办法在前面已经有介绍，但是给出的路径中间有一位会变动，也就是说需要 location 正则匹配区分。
“众所周知”，location 区块匹配正则表达式时，内部 proxy_pass 如果继续配置使用 request_uri 改写功能（即 http://somewhere/path 形式）会报错不可用，那要怎么解决这个需求呢？事实情况并没有这么简单。&lt;/p></description></item><item><title>nginx 配置 proxy_cache 缓存功能，附带清理缓存脚本</title><link>https://blog.epurs.com/post/nginx-proxy-cache-configuration/</link><pubDate>Thu, 09 May 2019 02:32:34 +0000</pubDate><guid>https://blog.epurs.com/post/nginx-proxy-cache-configuration/</guid><description>&lt;p>nginx 缓存 proxy_cache 配置可以减轻后端服务接口压力，提升访问速度，甚至可以当作 CDN 服务器来使用。文中略去概念性内容，简单粗暴的只记录关键配置办法，附送手动清理缓存脚本，开袋即食。&lt;/p></description></item><item><title>nginx 使用 websocket 的配置参数</title><link>https://blog.epurs.com/post/websocket-configuration-with-nginx/</link><pubDate>Tue, 23 Apr 2019 16:36:34 +0000</pubDate><guid>https://blog.epurs.com/post/websocket-configuration-with-nginx/</guid><description>&lt;p>网上有很多 nginx 配置 websocket 的文章，要么配置复杂，罗列了很多没有意义的参数配置，要么只是写出几个关键参数无法保证所有访问的兼容性。
这里我也简要记录一次 websocket 配置修改过程，给出一种配置办法。&lt;/p></description></item><item><title>记一次 git push 失败解决办法</title><link>https://blog.epurs.com/post/git-push-error-branch-is-currently-checked-out/</link><pubDate>Tue, 16 Apr 2019 08:36:34 +0000</pubDate><guid>https://blog.epurs.com/post/git-push-error-branch-is-currently-checked-out/</guid><description>&lt;p>&lt;code>git push&lt;/code> 总是失败，加了&lt;code>--force&lt;/code>参数也不成功，命令行执行时会提示：&lt;code>branch is currently checked out&lt;/code>。
原因是什么？如何解决呢？&lt;/p></description></item><item><title>CoreOS 添加 bash-completion 命令补全</title><link>https://blog.epurs.com/post/coreos-add-bash-completion/</link><pubDate>Tue, 16 Apr 2019 08:13:50 +0000</pubDate><guid>https://blog.epurs.com/post/coreos-add-bash-completion/</guid><description>&lt;p>CoreOS 系统常用作容器宿主机系统，开发者本着缩小镜像体积提供核心功能的初衷，没有附带上命令补全功能，这可真要逼死 &lt;code>TAB&lt;/code> 键按个不停随时感觉要飞起来的 &lt;code>bash shell&lt;/code> 用户。
本文是参考 github/coreos 上 ISSUE 提供的办法来实践测试写出，最终解决方案有些许优化。&lt;/p></description></item><item><title>Python 中字符串的内置方法</title><link>https://blog.epurs.com/post/py-study-string/</link><pubDate>Mon, 15 Apr 2019 11:45:00 +0000</pubDate><guid>https://blog.epurs.com/post/py-study-string/</guid><description>&lt;p>Python 中字符串的内置方法作用用例总结&lt;/p></description></item><item><title>Docker login 报证书存储错误的解决办法</title><link>https://blog.epurs.com/post/docker-login-error-saving-credentials/</link><pubDate>Thu, 11 Apr 2019 10:05:58 +0000</pubDate><guid>https://blog.epurs.com/post/docker-login-error-saving-credentials/</guid><description>&lt;p>docker login 出现错误，提示：&lt;code>Error saving credentials: error storing credentials - err: exit status 1, out: Cannot autolaunch D-Bus without X11 $DISPLAY &lt;/code>&lt;/p></description></item><item><title>Linux 时间同步服务 -- ntp 和 chrony</title><link>https://blog.epurs.com/post/ntp-and-chrony/</link><pubDate>Wed, 10 Jan 2018 17:05:13 +0000</pubDate><guid>https://blog.epurs.com/post/ntp-and-chrony/</guid><description>&lt;p>Linux 时间同步工具，ntp 和 chrony 详细介绍，简单对比。&lt;/p></description></item></channel></rss>