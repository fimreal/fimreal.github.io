<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on 闲隅</title><link>blog.epurs.com/categories/web/</link><description>Recent content in web on 闲隅</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 09 May 2019 06:51:22 +0000</lastBuildDate><atom:link href="blog.epurs.com/categories/web/index.xml" rel="self" type="application/rss+xml"/><item><title>nginx location 规则使用正则时改写 request_uri 报错</title><link>blog.epurs.com/post/nginx-proxy-cache-regular-configuration/</link><pubDate>Thu, 09 May 2019 06:51:22 +0000</pubDate><guid>blog.epurs.com/post/nginx-proxy-cache-regular-configuration/</guid><description>&lt;p>今天在配置 nginx 缓存时，遇到一个棘手的问题，开发反馈需要实现缓存特定路径下的数据，并且要能手动清除缓存。缓存配置和清除的办法在前面已经有介绍，但是给出的路径中间有一位会变动，也就是说需要 location 正则匹配区分。
“众所周知”，location 区块匹配正则表达式时，内部 proxy_pass 如果继续配置使用 request_uri 改写功能（即 http://somewhere/path 形式）会报错不可用，那要怎么解决这个需求呢？事实情况并没有这么简单。&lt;/p></description></item><item><title>nginx 配置 proxy_cache 缓存功能，附带清理缓存脚本</title><link>blog.epurs.com/post/nginx-proxy-cache-configuration/</link><pubDate>Thu, 09 May 2019 02:32:34 +0000</pubDate><guid>blog.epurs.com/post/nginx-proxy-cache-configuration/</guid><description>&lt;p>nginx 缓存 proxy_cache 配置可以减轻后端服务接口压力，提升访问速度，甚至可以当作 CDN 服务器来使用。文中略去概念性内容，简单粗暴的只记录关键配置办法，附送手动清理缓存脚本，开袋即食。&lt;/p></description></item><item><title>nginx 使用 websocket 的配置参数</title><link>blog.epurs.com/post/websocket-configuration-with-nginx/</link><pubDate>Tue, 23 Apr 2019 16:36:34 +0000</pubDate><guid>blog.epurs.com/post/websocket-configuration-with-nginx/</guid><description>&lt;p>网上有很多 nginx 配置 websocket 的文章，要么配置复杂，罗列了很多没有意义的参数配置，要么只是写出几个关键参数无法保证所有访问的兼容性。
这里我也简要记录一次 websocket 配置修改过程，给出一种配置办法。&lt;/p></description></item></channel></rss>